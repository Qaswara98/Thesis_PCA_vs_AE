Bootstrap: docker
From: ubuntu:latest

%post
    #Set time zone and set apt-get to non-interactive
    export TZ=Europe DEBIAN_FRONTEND=noninteractive
    #Set work directory
    cd /root

    #Install required libraries
    apt-get update -qq && apt-get install -y \
        apt-transport-https \
        ca-certificates \
        curl \
        build-essential \
        dirmngr \
        gnupg \
        libcurl4-openssl-dev \
        libgpgme11-dev \
        libnetcdf-dev \
        libseccomp-dev \
        libssl-dev \
        libxml2-dev \
        nano \
        pkg-config \
        software-properties-common \
        squashfs-tools \
        uuid-dev \
        vim \
        wget \
        tree \
        graphviz 

    #Install R 4.1
    apt-get install -y r-base r-base-dev

    # Install R packages
    R -e "install.packages(c('remotes', 'BiocManager'), repos='http://cran.rstudio.com/')" && \
        R -e "BiocManager::install(c('clusterProfiler', 'org.Hs.eg.db', 'AnnotationDbi', 'graphite', 'DOSE', 'enrichplot', 'ReactomePA', 'STRINGdb', 'BioNAR', 'GEOquery', 'DESeq2', 'edgeR', 'biomaRt'))" && \
        R -e "remotes::install_version('ggplot2', version = '3.5.1', repos = 'http://cran.us.r-project.org')" && \
        R -e "remotes::install_version('igraph', version = '2.0.3', repos = 'http://cran.us.r-project.org')" && \
        R -e "remotes::install_version('randomcoloR', version = '1.1.0.1', repos = 'http://cran.us.r-project.org')" && \
        R -e "remotes::install_version('dplyr', version = '1.1.4', repos = 'http://cran.us.r-project.org')" && \
        R -e "remotes::install_version('tidyr', version = '1.3.1', repos = 'http://cran.us.r-project.org')" && \
        R -e "remotes::install_version('openxlsx', version = '4.2.5.2', repos = 'http://cran.us.r-project.org')" && \
        R -e "remotes::install_version('VennDiagram', version = '1.7.3', repos = 'http://cran.us.r-project.org')"

    # Install Python 3.8 and pip
    add-apt-repository ppa:deadsnakes/ppa && \
        apt-get install -y python3.8 python3.8-venv

    # Create a virtual environment and install Python packages
    python3.8 -m venv /opt/venv && \
        /opt/venv/bin/pip install --upgrade pip && \
        /opt/venv/bin/pip install pandas numpy matplotlib scikit-learn tensorflow scipy seaborn

    # Set PATH to use the virtual environment
    export PATH="/opt/venv/bin:$PATH"
